#!/usr/bin/env python

import CedrusBoost
import CedrusSConsDefaultEnvironments
import CedrusSConsHelperFunctions

import os
import sys

Import('env')

# this line is a keeper:
boost = CedrusBoost.CedrusBoostSettings(env)
boost.need_boost_filesystem()
boost.need_boost_system()

project_target_name = 'xid_device_driver'

prefix = ''

if env.has_key( 'THE_CEDRUS_XIDON_BUILD' ):
    prefix = '$OBJ_ROOT/xid_device_library/'

inputs = [
    prefix + 'xid_device_driver/base_device_t.cpp',
    prefix + 'xid_device_driver/port_settings_t.cpp',
    prefix + 'xid_device_driver/stim_tracker_t.cpp',
    prefix + 'xid_device_driver/xid_con_t.cpp',
    prefix + 'xid_device_driver/xid_device_config_t.cpp',
    prefix + 'xid_device_driver/xid_device_scanner_t.cpp',
    prefix + 'xid_device_driver/xid_device_t.cpp',
]

if sys.platform == 'win32':
    inputs += [ prefix + 'xid_device_driver/xid_con_t_win.cpp']

elif sys.platform == 'darwin':
    inputs += [ prefix + 'xid_device_driver/xid_con_t_mac.cpp']

defines = [ 'CEDRUS_XID_MAKEDLL' ]
include_path = []
cxxflags = []
frameworks = []
lib_dependencies = []
lib_path = []
# can these go inside a helper?
linkflags = []

if sys.platform == 'win32':
    linkflags = [ '/SUBSYSTEM:WINDOWS',  '/VERSION:4.5', '/MANIFEST', '/INCREMENTAL', ]

elif sys.platform == 'darwin':
    frameworks = ['CoreFoundation', 'IOKit']

CedrusSConsHelperFunctions.DeclareSConsSharedLibraryBuild(
    env,
    project_target_name,
    inputs,
    defines,
    include_path,
    cxxflags,
    frameworks,
    lib_dependencies,
    lib_path,
    linkflags
)
