#!/usr/bin/env python

import CedrusBoost
import CedrusSConsDefaultEnvironments
import CedrusSConsHelperFunctions

import os
import sys

Import('env')

env.SetDefault(XIDLIB_OUTER_REPO_DIR = os.path.abspath(os.getcwd()) + os.path.sep + '..' + os.path.sep )
outer_repo_root_dir = env['XIDLIB_OUTER_REPO_DIR']

env['BOOST_VERSION'] = '1_58'
env['BOOST_DIR'] = outer_repo_root_dir + "binaries_boost" + os.path.sep + env['BOOST_VERSION']

env['WX_VERSION'] = 'NONE'

boost = CedrusBoost.CedrusBoostSettings(env)

project_target_name = 'st_tester'

inputs = [ 'st_test/main.cpp', ]
defines = []
include_path = []
cxxflags = []
frameworks = []
lib_dependencies = ['xid_device_driver']
lib_path = []
linkflags = []

if sys.platform == 'win32':
    linkflags = [ '/SUBSYSTEM:CONSOLE',  '/VERSION:1.0', '/MANIFEST', '/INCREMENTAL', ]

# CedrusSConsHelperFunctions needs this variable set, even if it's empty.
env.SetDefault(CEDRUS_COMPLETE_THIRD_PARTY_STAGING = [])

CedrusSConsHelperFunctions.DeclareSConsSimpleProgramBuild(
    env,
    project_target_name,
    inputs,
    defines,
    include_path,
    cxxflags,
    frameworks,
    lib_dependencies,
    lib_path,
    linkflags
)
